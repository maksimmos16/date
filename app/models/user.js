module.exports = function(mongoose,schema){	
	var userSchema = new schema({
		username         		: { type : String, default : ''},
        firstName       		: { type : String, default : ''},
        lastName		 		: { type : String, default : ''},
		email            		: { type : String, default : ''},
		password				: { type : String, default : ''},
        phno             		: { type : String, default : ''},
        countryCode     		: { type : String, default : ''},
        socialId		 		: { type : String, default: ''},
        googleToken		 		: { type : String, default: ''},
        instaId					: { type : String, default: ''},
        instaToken				: { type : String, default: ''},
        snapchatId				: { type : String, default: ''},
        spotifyId				: { type : String, default: ''},
        spotify					: { type : Object, default: {}},
		spotifyTracks			: { type: Object, default:[]},
		spotifySong				: { type: String, default:''},
		dob				 		: { type : Date, default: null},
		gender 			 		: { type : String, default : ''},
		sexualOrientation 		: { type : String, default: ''},
		country 				: { type : String, default: ''},
		state					: { type : String, default: ''},
		city					: { type : String, default: ''},
		songUrl					: { type : String, default: ''},
		location         		: { type : { type: String }, coordinates: [] },
		profilePic				: { type : String, default: ''},
		institute				: { type : String, default: ''},
		zodiacSign				: { type : String, default: ''},
		relationshipStatus 		: { type : String, default: ''},
		enableAgeInProfile      : { type : Boolean, default: false},
		additionalInfo			: { type : Object, default: {}},
		idealInfo				: { type : Object, default: {}},
		stripeAccountId			: { type : String, default: ''},
		deviceToken     		: { type : String, default: ''},
		deviceType      		: { type : String, enum: ['android', 'ios', 'web'], default: 'web' },
		role             		: { type : String, enum: ['admin','user'], default: 'user'},
	  	status           		: { type : String, enum:['pending', 'accept','reject'], default: 'pending' }, //document status
	  	isActive				: { type : Boolean, default: true},
		isDeleted       		: { type : Boolean, default: false },
		deleteReason			: { type : String, default: ''},
		isLogin         		: { type : Boolean, default: false }, 
		isOnline				: { type : Boolean, default: false},
		isVerified      		: { type : Boolean, default: false }, 
		otp              		: { type : String,default: ''}, 
		otpSentTime    		    : { type : Date, default: new Date()},
		otpExpire       		: { type : Number, default: 0},
		likeCount 				: { type: Number, default: 0},
		disLikeCount			: { type: Number, default: 0},
		superLikeCount			: { type: Number, default: 0},
		trustScore				: { type: Number, default: 0},
		trustScoreUpdatedAt		: { type: Date, default: new Date()},
		loginToken      		: { type : String,default:""},
		loginType 		 		: { type : String,enum: ['email', 'phno', 'gmail'] ,default: "email"},
		enabledNotifications    : { type : Object, default: []},
		disabledNotifications   : { type : Object, default: []},
		enabledNotificationsApp : { type : Object, default: []},
		disabledNotificationsApp: { type : Object, default: []},
		socketId				: { type : String, default : ''},
		didRewind				: { type : Boolean, default: false}, // to check if user has rewinded or not
		privacyMode				: { type: Boolean, default: false},
		showInSwipe				: { type: Boolean, default: true}, //show in swipe surge i.e in explore
		isFirstTime				: { type: Boolean, default: true},
		onChatScreen			: { type: Boolean, default: false},
		benefits				: { type: Object, default:{}},
		isWin					: { type: Boolean, default: false}, //is win for premium
		winUpdatedAt			: { type: Date}, //win time
		createdAt		 		: { type : Date, default : new Date()},
		updatedAt 	     		: { type : Date, default : new Date()}
	},{collection: 'users', versionKey: false});
	userSchema.index({ "location": "2dsphere"});
	var User = mongoose.model('users', userSchema);
	return User;
}